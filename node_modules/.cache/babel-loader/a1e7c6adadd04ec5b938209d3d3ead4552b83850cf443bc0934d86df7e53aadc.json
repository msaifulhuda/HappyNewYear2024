{"ast":null,"code":"import { rgbToHsl, setRangeValue, stringToRgb } from \"tsparticles-engine\";\nconst explodeSoundCheck = args => {\n  const data = args.data;\n  return data.particle.shape === \"line\";\n};\nconst fixRange = (value, min, max) => {\n  const diffSMax = value.max > max ? value.max - max : 0;\n  let res = setRangeValue(value);\n  if (diffSMax) {\n    res = setRangeValue(value.min - diffSMax, max);\n  }\n  const diffSMin = value.min < min ? value.min : 0;\n  if (diffSMin) {\n    res = setRangeValue(0, value.max + diffSMin);\n  }\n  return res;\n};\nconst fireworksOptions = [\"#ff595e\", \"#ffca3a\", \"#8ac926\", \"#1982c4\", \"#6a4c93\"].map(color => {\n  const rgb = stringToRgb(color);\n  if (!rgb) {\n    return undefined;\n  }\n  const hsl = rgbToHsl(rgb),\n    sRange = fixRange({\n      min: hsl.s - 30,\n      max: hsl.s + 30\n    }, 0, 100),\n    lRange = fixRange({\n      min: hsl.l - 30,\n      max: hsl.l + 30\n    }, 0, 100);\n  return {\n    color: {\n      value: {\n        h: hsl.h,\n        s: sRange,\n        l: lRange\n      }\n    },\n    stroke: {\n      width: 0\n    },\n    number: {\n      value: 0\n    },\n    opacity: {\n      value: {\n        min: 0.1,\n        max: 1\n      },\n      animation: {\n        enable: true,\n        speed: 0.7,\n        sync: false,\n        startValue: \"max\",\n        destroy: \"min\"\n      }\n    },\n    shape: {\n      type: \"circle\"\n    },\n    size: {\n      value: {\n        min: 1,\n        max: 2\n      },\n      animation: {\n        enable: true,\n        speed: 5,\n        count: 1,\n        sync: false,\n        startValue: \"min\",\n        destroy: \"none\"\n      }\n    },\n    life: {\n      count: 1,\n      duration: {\n        value: {\n          min: 1,\n          max: 2\n        }\n      }\n    },\n    move: {\n      decay: {\n        min: 0.075,\n        max: 0.1\n      },\n      enable: true,\n      gravity: {\n        enable: true,\n        inverse: false,\n        acceleration: 5\n      },\n      speed: {\n        min: 5,\n        max: 15\n      },\n      direction: \"none\",\n      outModes: \"destroy\"\n    }\n  };\n}).filter(t => t !== undefined);\nexport const options = {\n  detectRetina: true,\n  background: {\n    color: \"#000\"\n  },\n  fpsLimit: 120,\n  emitters: {\n    direction: \"top\",\n    life: {\n      count: 0,\n      duration: 0.1,\n      delay: 0.1\n    },\n    rate: {\n      delay: 0.05,\n      quantity: 1\n    },\n    size: {\n      width: 100,\n      height: 0\n    },\n    position: {\n      y: 100,\n      x: 50\n    }\n  },\n  particles: {\n    number: {\n      value: 0\n    },\n    destroy: {\n      mode: \"split\",\n      bounds: {\n        top: {\n          min: 10,\n          max: 30\n        }\n      },\n      split: {\n        sizeOffset: false,\n        count: 1,\n        factor: {\n          value: 0.333333\n        },\n        rate: {\n          value: {\n            min: 75,\n            max: 150\n          }\n        },\n        particles: fireworksOptions\n      }\n    },\n    life: {\n      count: 1\n    },\n    shape: {\n      type: \"line\"\n    },\n    size: {\n      value: {\n        min: 0.1,\n        max: 50\n      },\n      animation: {\n        enable: true,\n        sync: true,\n        speed: 90,\n        startValue: \"max\",\n        destroy: \"min\"\n      }\n    },\n    stroke: {\n      color: {\n        value: \"#ffffff\"\n      },\n      width: 1\n    },\n    rotate: {\n      path: true\n    },\n    move: {\n      enable: true,\n      gravity: {\n        acceleration: 15,\n        enable: true,\n        inverse: true,\n        maxSpeed: 100\n      },\n      speed: {\n        min: 10,\n        max: 20\n      },\n      outModes: {\n        default: \"destroy\",\n        top: \"none\"\n      },\n      trail: {\n        fillColor: \"#000\",\n        enable: true,\n        length: 10\n      }\n    }\n  },\n  sounds: {\n    enable: true,\n    events: [{\n      event: \"particleRemoved\",\n      filter: explodeSoundCheck,\n      audio: [\"https://particles.js.org/audio/explosion0.mp3\", \"https://particles.js.org/audio/explosion1.mp3\", \"https://particles.js.org/audio/explosion2.mp3\"]\n    }],\n    volume: 50\n  }\n};","map":{"version":3,"names":["rgbToHsl","setRangeValue","stringToRgb","explodeSoundCheck","args","data","particle","shape","fixRange","value","min","max","diffSMax","res","diffSMin","fireworksOptions","map","color","rgb","undefined","hsl","sRange","s","lRange","l","h","stroke","width","number","opacity","animation","enable","speed","sync","startValue","destroy","type","size","count","life","duration","move","decay","gravity","inverse","acceleration","direction","outModes","filter","t","options","detectRetina","background","fpsLimit","emitters","delay","rate","quantity","height","position","y","x","particles","mode","bounds","top","split","sizeOffset","factor","rotate","path","maxSpeed","default","trail","fillColor","length","sounds","events","event","audio","volume"],"sources":["C:/happynewyear-react-js/hny/node_modules/tsparticles-preset-fireworks/esm/options.js"],"sourcesContent":["import { rgbToHsl, setRangeValue, stringToRgb, } from \"tsparticles-engine\";\nconst explodeSoundCheck = (args) => {\n    const data = args.data;\n    return data.particle.shape === \"line\";\n};\nconst fixRange = (value, min, max) => {\n    const diffSMax = value.max > max ? value.max - max : 0;\n    let res = setRangeValue(value);\n    if (diffSMax) {\n        res = setRangeValue(value.min - diffSMax, max);\n    }\n    const diffSMin = value.min < min ? value.min : 0;\n    if (diffSMin) {\n        res = setRangeValue(0, value.max + diffSMin);\n    }\n    return res;\n};\nconst fireworksOptions = [\"#ff595e\", \"#ffca3a\", \"#8ac926\", \"#1982c4\", \"#6a4c93\"]\n    .map((color) => {\n    const rgb = stringToRgb(color);\n    if (!rgb) {\n        return undefined;\n    }\n    const hsl = rgbToHsl(rgb), sRange = fixRange({ min: hsl.s - 30, max: hsl.s + 30 }, 0, 100), lRange = fixRange({ min: hsl.l - 30, max: hsl.l + 30 }, 0, 100);\n    return {\n        color: {\n            value: {\n                h: hsl.h,\n                s: sRange,\n                l: lRange,\n            },\n        },\n        stroke: {\n            width: 0,\n        },\n        number: {\n            value: 0,\n        },\n        opacity: {\n            value: {\n                min: 0.1,\n                max: 1,\n            },\n            animation: {\n                enable: true,\n                speed: 0.7,\n                sync: false,\n                startValue: \"max\",\n                destroy: \"min\",\n            },\n        },\n        shape: {\n            type: \"circle\",\n        },\n        size: {\n            value: { min: 1, max: 2 },\n            animation: {\n                enable: true,\n                speed: 5,\n                count: 1,\n                sync: false,\n                startValue: \"min\",\n                destroy: \"none\",\n            },\n        },\n        life: {\n            count: 1,\n            duration: {\n                value: {\n                    min: 1,\n                    max: 2,\n                },\n            },\n        },\n        move: {\n            decay: { min: 0.075, max: 0.1 },\n            enable: true,\n            gravity: {\n                enable: true,\n                inverse: false,\n                acceleration: 5,\n            },\n            speed: { min: 5, max: 15 },\n            direction: \"none\",\n            outModes: \"destroy\",\n        },\n    };\n})\n    .filter((t) => t !== undefined);\nexport const options = {\n    detectRetina: true,\n    background: {\n        color: \"#000\",\n    },\n    fpsLimit: 120,\n    emitters: {\n        direction: \"top\",\n        life: {\n            count: 0,\n            duration: 0.1,\n            delay: 0.1,\n        },\n        rate: {\n            delay: 0.05,\n            quantity: 1,\n        },\n        size: {\n            width: 100,\n            height: 0,\n        },\n        position: {\n            y: 100,\n            x: 50,\n        },\n    },\n    particles: {\n        number: {\n            value: 0,\n        },\n        destroy: {\n            mode: \"split\",\n            bounds: {\n                top: { min: 10, max: 30 },\n            },\n            split: {\n                sizeOffset: false,\n                count: 1,\n                factor: {\n                    value: 0.333333,\n                },\n                rate: {\n                    value: { min: 75, max: 150 },\n                },\n                particles: fireworksOptions,\n            },\n        },\n        life: {\n            count: 1,\n        },\n        shape: {\n            type: \"line\",\n        },\n        size: {\n            value: {\n                min: 0.1,\n                max: 50,\n            },\n            animation: {\n                enable: true,\n                sync: true,\n                speed: 90,\n                startValue: \"max\",\n                destroy: \"min\",\n            },\n        },\n        stroke: {\n            color: {\n                value: \"#ffffff\",\n            },\n            width: 1,\n        },\n        rotate: {\n            path: true,\n        },\n        move: {\n            enable: true,\n            gravity: {\n                acceleration: 15,\n                enable: true,\n                inverse: true,\n                maxSpeed: 100,\n            },\n            speed: {\n                min: 10,\n                max: 20,\n            },\n            outModes: {\n                default: \"destroy\",\n                top: \"none\",\n            },\n            trail: {\n                fillColor: \"#000\",\n                enable: true,\n                length: 10,\n            },\n        },\n    },\n    sounds: {\n        enable: true,\n        events: [\n            {\n                event: \"particleRemoved\",\n                filter: explodeSoundCheck,\n                audio: [\n                    \"https://particles.js.org/audio/explosion0.mp3\",\n                    \"https://particles.js.org/audio/explosion1.mp3\",\n                    \"https://particles.js.org/audio/explosion2.mp3\",\n                ],\n            },\n        ],\n        volume: 50,\n    },\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
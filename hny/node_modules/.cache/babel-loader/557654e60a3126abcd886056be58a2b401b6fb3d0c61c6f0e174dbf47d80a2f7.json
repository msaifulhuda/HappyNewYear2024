{"ast":null,"code":"import { Sounds } from \"./Options/Classes/Sounds\";\nimport { SoundsInstance } from \"./SoundsInstance\";\nclass SoundsPlugin {\n  constructor(engine) {\n    this.id = \"sounds\";\n    this._engine = engine;\n  }\n  getPlugin(container) {\n    return new SoundsInstance(container, this._engine);\n  }\n  loadOptions(options, source) {\n    var _soundsOptions;\n    if (!this.needsPlugin(options) && !this.needsPlugin(source)) {\n      return;\n    }\n    let soundsOptions = options.sounds;\n    if (((_soundsOptions = soundsOptions) === null || _soundsOptions === void 0 ? void 0 : _soundsOptions.load) === undefined) {\n      options.sounds = soundsOptions = new Sounds();\n    }\n    soundsOptions.load(source === null || source === void 0 ? void 0 : source.sounds);\n  }\n  needsPlugin(options) {\n    var _options$sounds$enabl, _options$sounds;\n    return (_options$sounds$enabl = options === null || options === void 0 || (_options$sounds = options.sounds) === null || _options$sounds === void 0 ? void 0 : _options$sounds.enable) !== null && _options$sounds$enabl !== void 0 ? _options$sounds$enabl : false;\n  }\n}\nexport async function loadSoundsPlugin(engine) {\n  let refresh = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  await engine.addPlugin(new SoundsPlugin(engine), refresh);\n}","map":{"version":3,"names":["Sounds","SoundsInstance","SoundsPlugin","constructor","engine","id","_engine","getPlugin","container","loadOptions","options","source","_soundsOptions","needsPlugin","soundsOptions","sounds","load","undefined","_options$sounds$enabl","_options$sounds","enable","loadSoundsPlugin","refresh","arguments","length","addPlugin"],"sources":["C:/happynewyear-react-js/hny/node_modules/tsparticles-plugin-sounds/esm/index.js"],"sourcesContent":["import { Sounds } from \"./Options/Classes/Sounds\";\nimport { SoundsInstance } from \"./SoundsInstance\";\nclass SoundsPlugin {\n    constructor(engine) {\n        this.id = \"sounds\";\n        this._engine = engine;\n    }\n    getPlugin(container) {\n        return new SoundsInstance(container, this._engine);\n    }\n    loadOptions(options, source) {\n        if (!this.needsPlugin(options) && !this.needsPlugin(source)) {\n            return;\n        }\n        let soundsOptions = options.sounds;\n        if (soundsOptions?.load === undefined) {\n            options.sounds = soundsOptions = new Sounds();\n        }\n        soundsOptions.load(source?.sounds);\n    }\n    needsPlugin(options) {\n        return options?.sounds?.enable ?? false;\n    }\n}\nexport async function loadSoundsPlugin(engine, refresh = true) {\n    await engine.addPlugin(new SoundsPlugin(engine), refresh);\n}\n"],"mappings":"AAAA,SAASA,MAAM,QAAQ,0BAA0B;AACjD,SAASC,cAAc,QAAQ,kBAAkB;AACjD,MAAMC,YAAY,CAAC;EACfC,WAAWA,CAACC,MAAM,EAAE;IAChB,IAAI,CAACC,EAAE,GAAG,QAAQ;IAClB,IAAI,CAACC,OAAO,GAAGF,MAAM;EACzB;EACAG,SAASA,CAACC,SAAS,EAAE;IACjB,OAAO,IAAIP,cAAc,CAACO,SAAS,EAAE,IAAI,CAACF,OAAO,CAAC;EACtD;EACAG,WAAWA,CAACC,OAAO,EAAEC,MAAM,EAAE;IAAA,IAAAC,cAAA;IACzB,IAAI,CAAC,IAAI,CAACC,WAAW,CAACH,OAAO,CAAC,IAAI,CAAC,IAAI,CAACG,WAAW,CAACF,MAAM,CAAC,EAAE;MACzD;IACJ;IACA,IAAIG,aAAa,GAAGJ,OAAO,CAACK,MAAM;IAClC,IAAI,EAAAH,cAAA,GAAAE,aAAa,cAAAF,cAAA,uBAAbA,cAAA,CAAeI,IAAI,MAAKC,SAAS,EAAE;MACnCP,OAAO,CAACK,MAAM,GAAGD,aAAa,GAAG,IAAId,MAAM,CAAC,CAAC;IACjD;IACAc,aAAa,CAACE,IAAI,CAACL,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEI,MAAM,CAAC;EACtC;EACAF,WAAWA,CAACH,OAAO,EAAE;IAAA,IAAAQ,qBAAA,EAAAC,eAAA;IACjB,QAAAD,qBAAA,GAAOR,OAAO,aAAPA,OAAO,gBAAAS,eAAA,GAAPT,OAAO,CAAEK,MAAM,cAAAI,eAAA,uBAAfA,eAAA,CAAiBC,MAAM,cAAAF,qBAAA,cAAAA,qBAAA,GAAI,KAAK;EAC3C;AACJ;AACA,OAAO,eAAeG,gBAAgBA,CAACjB,MAAM,EAAkB;EAAA,IAAhBkB,OAAO,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAN,SAAA,GAAAM,SAAA,MAAG,IAAI;EACzD,MAAMnB,MAAM,CAACqB,SAAS,CAAC,IAAIvB,YAAY,CAACE,MAAM,CAAC,EAAEkB,OAAO,CAAC;AAC7D"},"metadata":{},"sourceType":"module","externalDependencies":[]}